#include <iostream>
#include <vector>
#include <cstdint>

const uint64_t P0 = 0x76D32D265948B681;
const uint64_t P1 = 0x4C325261B0416984;
const uint64_t P2 = 0x932C205A04869125;
const uint64_t P3 = 0x228861948B411452;
const uint64_t P4 = 0x0C02424C84992C00;
const uint64_t P5 = 0xD260A44221251288;
const uint64_t P6 = 0xA0420C36102D02D0;
const uint64_t P7 = 0x05108A48149120A6;

// プリコンパイルされた素数ビットマップを格納する配列
const std::vector<uint64_t> prime_data = {
    P0, P1, P2, P3, P4, P5, P6, P7
};

// 従来の素数判定アルゴリズム（試割り法）
bool isPrime_fallback(int n) {
    if (n <= 1) return false;
    if (n <= 3) return true;
    if (n % 2 == 0 || n % 3 == 0) return false;
    for (int i = 5; i * i <= n; i = i + 6) {
        if (n % i == 0 || n % (i + 2) == 0) {
            return false;
        }
    }
    return true;
}

// 修正されたisPrime関数
bool isPrime(int n) {
    // 1. 2は素数である
    if (n == 2) {
        return true;
    }

    // 2. 1024未満の奇数であるかをチェック
    if (n < 1024 && n > 0 && n % 2 != 0) {
        // インデックスkを計算 (n = 2k + 1)
        int k = (n - 1) / 2;
        int wordIndex = k / 64;
        int bitPosition = k % 64;

        // 範囲外のインデックスは無効
        if (wordIndex >= prime_data.size()) {
            return false;
        }
        
        // ビットマップから素数情報を抽出
        uint64_t word = prime_data[wordIndex];
        return (word >> (63 - bitPosition)) & 1;
    }

    // 3. その他のケースは従来のアルゴリズムで判定
    return isPrime_fallback(n);
}

int main() {
    // テストケース
    std::cout << "Is 2 prime? " << (isPrime(2) ? "Yes" : "No") << std::endl;
    std::cout << "Is 7 prime? " << (isPrime(7) ? "Yes" : "No") << std::endl;
    std::cout << "Is 9 prime? " << (isPrime(9) ? "Yes" : "No") << std::endl;
    std::cout << "Is 997 prime? " << (isPrime(997) ? "Yes" : "No") << std::endl; // 1024未満の最大の素数
    std::cout << "Is 1023 prime? " << (isPrime(1023) ? "Yes" : "No") << std::endl; // 1023 = 3 * 11 * 31
    std::cout << "Is 1024 prime? " << (isPrime(1024) ? "Yes" : "No") << std::endl;
    std::cout << "Is 1025 prime? " << (isPrime(1025) ? "Yes" : "No") << std::endl;
    std::cout << "Is 104729 prime? " << (isPrime(104729) ? "Yes" : "No") << std::endl; // 104729は素数
    std::cout << "Is 104723 prime? " << (isPrime(104723) ? "Yes" : "No") << std::endl; // 104723 = 7 * 14960 + 3
    
    return 0;
}
